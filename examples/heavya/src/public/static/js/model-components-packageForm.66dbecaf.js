(window["webpackJsonp_dubhe_web"]=window["webpackJsonp_dubhe_web"]||[]).push([["model-components-packageForm","model-util"],{2349:function(e,t,r){"use strict";r.r(t);var a=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("el-form",{ref:"form",attrs:{model:e.form,rules:e.rules,"label-width":"100px"}},[r("el-form-item",{ref:"entryName",attrs:{label:"入口函数",prop:"entryName"}},[r("el-select",{attrs:{placeholder:"请选择入口函数",filterable:""},on:{change:function(t){return e.validateField("entryName")}},model:{value:e.form.entryName,callback:function(t){e.$set(e.form,"entryName",t)},expression:"form.entryName"}},e._l(e.dict.entry_name,(function(e){return r("el-option",{key:e.id,attrs:{value:e.value,label:e.label}})})),1)],1),e._v(" "),r("el-form-item",{attrs:{label:"Readme",prop:"readme"}},[r("el-input",{attrs:{type:"textarea",placeholder:"请输入模型描述",maxlength:"255",rows:4,"show-word-limit":""},model:{value:e.form.readme,callback:function(t){e.$set(e.form,"readme",t)},expression:"form.readme"}})],1),e._v(" "),r("el-divider",{attrs:{"content-position":"left"}},[e._v("Metadata")]),e._v(" "),r("el-form-item",{attrs:{label:"模型名称",prop:"name"}},[r("el-input",{attrs:{placeholder:"请输入模型名称"},model:{value:e.form.name,callback:function(t){e.$set(e.form,"name","string"===typeof t?t.trim():t)},expression:"form.name"}})],1),e._v(" "),r("el-form-item",{attrs:{label:"数据集名称",prop:"dataset"}},[r("el-input",{attrs:{placeholder:"请输入数据集名称"},model:{value:e.form.dataset,callback:function(t){e.$set(e.form,"dataset","string"===typeof t?t.trim():t)},expression:"form.dataset"}})],1),e._v(" "),r("el-form-item",{ref:"task",attrs:{label:"任务类型",prop:"task"}},[r("el-select",{attrs:{placeholder:"请选择任务类型",filterable:""},on:{change:function(t){return e.validateField("task")}},model:{value:e.form.task,callback:function(t){e.$set(e.form,"task",t)},expression:"form.task"}},e._l(e.dict.atlas_task,(function(e){return r("el-option",{key:e.id,attrs:{value:e.value,label:e.label}})})),1)],1),e._v(" "),r("el-form-item",{attrs:{label:"模型地址",prop:"url"}},[r("el-input",{attrs:{placeholder:"请输入模型地址"},model:{value:e.form.url,callback:function(t){e.$set(e.form,"url","string"===typeof t?t.trim():t)},expression:"form.url"}})],1),e._v(" "),r("el-divider",{attrs:{"content-position":"left"}},[e._v("输入")]),e._v(" "),r("el-form-item",{attrs:{label:"图像尺寸",prop:"size"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入图像尺寸"},model:{value:e.form.size,callback:function(t){e.$set(e.form,"size",e._n(t))},expression:"form.size"}})],1),e._v(" "),r("el-form-item",{staticClass:"is-required",attrs:{label:"均一化范围",prop:"range"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入均一化范围"},model:{value:e.form.range,callback:function(t){e.$set(e.form,"range","string"===typeof t?t.trim():t)},expression:"form.range"}})],1),e._v(" "),r("el-form-item",{attrs:{label:"色彩空间",prop:"space"}},[r("el-input",{staticClass:"w-200",attrs:{disabled:"",placeholder:"请输入色彩空间"},model:{value:e.form.space,callback:function(t){e.$set(e.form,"space","string"===typeof t?t.trim():t)},expression:"form.space"}}),e._v(" "),r("el-tooltip",{attrs:{effect:"dark",content:"炼知模型仅支持 RGB 格式的数据集",placement:"top"}},[r("i",{staticClass:"el-icon-warning-outline primary f18 v-text-top"})])],1),e._v(" "),r("el-divider",{attrs:{"content-position":"left"}},[e._v("归一化")]),e._v(" "),r("el-form-item",{staticClass:"is-required",attrs:{label:"均值",prop:"mean"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入均值"},model:{value:e.form.mean,callback:function(t){e.$set(e.form,"mean","string"===typeof t?t.trim():t)},expression:"form.mean"}})],1),e._v(" "),r("el-form-item",{staticClass:"is-required",attrs:{label:"方差",prop:"std"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入方差"},model:{value:e.form.std,callback:function(t){e.$set(e.form,"std","string"===typeof t?t.trim():t)},expression:"form.std"}})],1),e._v(" "),r("el-divider",{attrs:{"content-position":"left"}},[e._v("Entry Args")]),e._v(" "),r("el-form-item",{attrs:{label:"预训练模型",prop:"entryPretrained"}},[r("el-switch",{model:{value:e.form.entryPretrained,callback:function(t){e.$set(e.form,"entryPretrained",t)},expression:"form.entryPretrained"}})],1),e._v(" "),r("el-form-item",{attrs:{label:"分类数量",prop:"entryNumClasses"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入分类数量"},model:{value:e.form.entryNumClasses,callback:function(t){e.$set(e.form,"entryNumClasses",e._n(t))},expression:"form.entryNumClasses"}})],1),e._v(" "),r("el-divider",{attrs:{"content-position":"left"}},[e._v("Other Metadata")]),e._v(" "),r("el-form-item",{attrs:{label:"分类数量",prop:"otherNumClasses"}},[r("el-input",{staticClass:"w-200",attrs:{placeholder:"请输入分类数量"},model:{value:e.form.otherNumClasses,callback:function(t){e.$set(e.form,"otherNumClasses",e._n(t))},expression:"form.otherNumClasses"}})],1)],1)},n=[],l=r("44fe");function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t,r){return t=u(t),t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e){var t=c(e,"string");return"symbol"===o(t)?t:String(t)}function c(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var a=r.call(e,t||"default");if("object"!==o(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}var f={id:null,entryName:null,readme:null,name:null,dataset:null,task:null,url:null,size:"224",range:"[0, 1]",space:"rgb",mean:"[0.485, 0.456, 0.406]",std:"[0.229, 0.224, 0.225]",entryPretrained:!0,entryNumClasses:null,otherNumClasses:null},p={name:"PackageForm",dicts:["entry_name","atlas_task"],data:function(){return{form:i({},f),rules:{entryName:[{required:!0,message:"请选择入口函数",trigger:"manual"}],name:[{required:!0,message:"请输入模型名称",trigger:["blur","change"]}],dataset:[{required:!0,message:"请输入数据集名称",trigger:["blur","change"]}],task:[{required:!0,message:"请选择任务类型",trigger:"manual"}],url:[{required:!0,message:"请输入模型地址",trigger:["blur","change"]}],size:[{required:!0,message:"请输入图像尺寸",trigger:["blur","change"]}],range:[{validator:Object(l["generateNumArrValidator"])({count:2,min:0,max:1,emptyMsg:"请输入均一化范围"}),trigger:"blur"}],space:[{required:!0,message:"请输入色彩空间",trigger:["blur","change"]}],mean:[{validator:Object(l["generateNumArrValidator"])({count:3,emptyMsg:"请输入均值"}),trigger:"blur"}],std:[{validator:Object(l["generateNumArrValidator"])({count:3,emptyMsg:"请输入方差"}),trigger:"blur"}],entryPretrained:[{required:!0,message:"请选择是否为预训练模型",trigger:["blur","change"]}],entryNumClasses:[{required:!0,message:"请输入分类数量",trigger:["blur","change"]}],otherNumClasses:[{required:!0,message:"请输入分类数量",trigger:["blur","change"]}]}}},methods:{initForm:function(e){this.form.id=e},resetForm:function(){var e=this;this.form=i({},f),this.$nextTick((function(){e.clearValidate()}))},validate:function(e,t){var r=!0;if(this.$refs.form.validate((function(e){r=r&&e})),r){var a=i({},this.form);a.range=JSON.parse(a.range),a.mean=JSON.parse(a.mean),a.std=JSON.parse(a.std),e&&e(a)}else t&&t(this.form)},validateField:function(e){this.$refs[e].validate("manual")},clearValidate:function(){this.$refs.form.clearValidate()}}},d=p,b=(r("91f7"),r("2877")),g=Object(b["a"])(d,a,n,!1,null,"05b85cc6",null);t["default"]=g.exports},"44fe":function(e,t,r){"use strict";function a(e){var t=e.count,r=e.min,a=e.max,n=e.emptyMsg;return function(e,l,o){if(!l)return o(new Error(n||"值不能为空"));try{var s=JSON.parse(l);return s.length!==t?o(new Error("数组需要有 ".concat(t," 个成员"))):void 0!==r&&s.find((function(e){return e<r}))?o(new Error("数组成员不能小于 ".concat(r))):void 0!==a&&s.find((function(e){return e>a}))?o(new Error("数组成员不能大于 ".concat(a))):o()}catch(i){return o(new Error("不是有效的 JSON 数组"))}}}r.r(t),r.d(t,"generateNumArrValidator",(function(){return a})),r.d(t,"atlasFrameTypeList",(function(){return n})),r.d(t,"atlasModelTypeList",(function(){return l})),r.d(t,"TF_FRAME_TYPE",(function(){return o})),r.d(t,"SAVED_MODEL_MODEL_TYPE",(function(){return s}));var n=[{label:"PyTorch",value:"3"}],l=[{label:"PyTorch PTH",value:"8"}],o=2,s=1},"91f7":function(e,t,r){"use strict";r("e62f")},e62f:function(e,t,r){}}]);