(window["webpackJsonp_dubhe_web"]=window["webpackJsonp_dubhe_web"]||[]).push([["dataset-medical-status","dataset-medical-constant"],{"63e7":function(e,t,n){"use strict";n.r(t),n.d(t,"medicalProgressMap",(function(){return r})),n.d(t,"medicalAnnotationCodeMap",(function(){return o})),n.d(t,"medicalFirstLevelCodeMap",(function(){return a})),n.d(t,"medicalAnnotationMap",(function(){return i})),n.d(t,"annotationList",(function(){return u})),n.d(t,"modalityMap",(function(){return c})),n.d(t,"bodyPartMap",(function(){return l})),n.d(t,"medicalStatusMap",(function(){return s})),n.d(t,"getAnnotateType",(function(){return p}));var r={unfinished:"未标注",autoFinished:"自动标注完成",manualAnnotating:"手动标注中",finished:"标注完成"},o={OrganSegmentation:1001,LesionDetection:2001,Other:2999},a={1e3:{name:"器官分割"},2e3:{name:"病灶识别"}},i={1001:{name:"器官分割",urlPrefix:"organSegmentation",parentName:"器官分割"},2001:{name:"肺结节检测",urlPrefix:"lesionDetection",parentName:"病灶识别"},2999:{name:"其它",urlPrefix:"other",parentName:"病灶识别"}},u=Object.keys(i).map((function(e){return{label:i[e].name,value:Number(e)}})),c={CT:"CT",MR:"MR",US:"US","X-Ray":"X-Ray",OTHER:"OTHER"},l={BRAIN:"BRAIN",LUNG:"LUNG",LIVER:"LIVER",SOFTTISSUE:"SOFTTISSUE",OTHER:"OTHER"},s={101:{name:"未标注",type:"info"},102:{name:"标注中",type:"warning"},103:{name:"自动标注中",type:"danger"},104:{name:"自动标注完成",type:""},105:{name:"标注完成",type:"success"}},p=function(e){return Number(e)>2e3&&Number(e)<3e3?1:(Number(e)>1e3&&Number(e),0)}},bd24:function(e,t,n){"use strict";n.r(t);var r=n("2638"),o=n.n(r),a=n("63e7");function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t,n){return t=s(t),t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e){var t=p(e,"string");return"symbol"===i(t)?t:String(t)}function p(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}t["default"]={name:"DatasetStatus",functional:!0,render:function(e,t){var n=t.data,r=t.props,i=r.statusList,u=r.filterByDatasetStatus,l=r.datasetStatusFilter,s=["el-icon-arrow-down","el-icon--right"],p="all"===l?null:"primary",f=c(c({},n),{},{scopedSlots:{header:function(){return e("el-dropdown",{attrs:{trigger:"click",size:"medium"}},[e("span",[e("span",o()([{},{class:p}]),["状态"]),e("i",o()([{},{class:s}]))]),e("el-dropdown-menu",{slot:"dropdown"},[i.map((function(t){return e("el-dropdown-item",{key:t.value,nativeOn:{click:function(){return u(t.value)}}},[t.label])}))])])},default:function(t){var n=t.row,r=a["medicalStatusMap"][n.status]||{},i=!r.type&&r.bgColor&&{props:{color:r.bgColor},style:{color:r.color,borderColor:r.bgColor}};return e("el-tag",o()([{attrs:{type:r.type}},i]),[r.name])}}});return e("el-table-column",f)}}}}]);